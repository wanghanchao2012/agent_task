package com.emarbox.agent.dbsync.service;

import java.util.Map;
import java.util.stream.Stream;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.emarbox.agent.dbsync.entity.TableFlowEntity;
import com.emarbox.agent.dbsync.enums.DataFlowEnum;

@Service
public class ReplaceDataProcessService implements IDataProcess {

	@Transactional
	@Override
	public boolean process(DataFlowEnum record) {
		JdbcTemplate fromJdbcTemplate = record.getFromJdbcTemplate();
		JdbcTemplate toJdbcTemplate = record.getToJdbcTemplate();
		Stream<TableFlowEntity> flowInfo = record.getFlowInfo();
		flowInfo.forEach(e -> {
			if (e.getFromTable().equals("project_set")) {
				Map<String, Object> queryForMap = fromJdbcTemplate.queryForMap("show create table "+e.getFromTable());
				toJdbcTemplate.execute("drop table if exists " + e.getToTable()+"_temp_1");
				
			}
		});
		return false;
	}

}
